{"version":3,"file":"static/js/home-view.8979e4cc.chunk.js","mappings":"0LACA,EAAuB,wBAAvB,EAAsD,wBAAtD,EAAsF,yBAAtF,EAA0H,4BAA1H,EAA8J,yB,SCoC9J,EAjCkB,SAAC,GAAgB,IAAdA,EAAa,EAAbA,OACXC,GAAWC,EAAAA,EAAAA,MAEjB,OACI,eAAIC,UAAWC,EAAf,SACKJ,GACGA,EAAOK,KAAI,SAAAC,GAAK,OAChB,eAAmBH,UAAWC,EAA9B,UACI,UAAC,KAAD,CAAMG,GAAI,CACNC,SAAS,WAAD,OAAaF,EAAMG,IAC3BC,MAAO,CAAEC,KAAMV,IAChBE,UAAWC,EAHd,WAII,gBACID,UAAWC,EACXQ,IAAKN,EAAMO,YACXC,IAAKR,EAAMS,OAAST,EAAMU,KAC1BC,MAAM,MACNC,OAAO,SAEX,cAAGf,UAAWC,EAAd,SAA2BE,EAAMS,OAAST,EAAMU,WAZ/CV,EAAMG,W,oLCXzBU,EAAU,mCACVC,EAAW,+BAAjB,SAGeC,IAAAA,OAAAA,EAAAA,MAAAA,KAAAA,W,aAAf,O,oBAAA,2GAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SAC2BC,MAAMF,EAAKC,GADtC,YACUE,EADV,QAEoBC,GAFpB,iCAGgBD,EAASE,OAHzB,gDAIUC,QAAQC,OAAO,IAAIC,MAAM,cAJnC,2GAQO,SAASC,IACd,OAAOV,EAAuB,GAAD,OAAID,EAAJ,qCAAyCD,IAIjE,SAASa,EAAkBC,GAChC,OAAOZ,EAAuB,GAAD,OAAID,EAAJ,iCAAqCD,EAArC,kBAAsDc,EAAtD,+CAIxB,SAASC,EAAkBC,GAChC,OAAOd,EAAuB,GAAD,OAAID,EAAJ,kBAAsBe,EAAtB,oBAAyChB,EAAzC,oBAKxB,SAASiB,EAAeD,GAC7B,OAAOd,EAAuB,GAAD,OAAID,EAAJ,kBAAsBe,EAAtB,4BAAiDhB,EAAjD,oBAIxB,SAASkB,EAAkBF,GAChC,OAAOd,EAAuB,GAAD,OAAID,EAAJ,kBAAsBe,EAAtB,4BAAiDhB,EAAjD,sB,4ECd/B,UAhBA,WACI,OAA4BmB,EAAAA,EAAAA,UAAS,MAArC,eAAOtC,EAAP,KAAeuC,EAAf,KAOA,OANAC,QAAQC,IAAIzC,IAEZ0C,EAAAA,EAAAA,YAAU,YACNX,EAAAA,EAAAA,MAAsBY,MAAK,SAAAlB,GAAQ,OAAIc,EAAUd,EAASmB,cAC3D,KAGC,4BACI,4CACA,SAAC,IAAD,CAAW5C,OAAQA","sources":["webpack://react-homework-template/./src/components/MovieCard/MovieCard.module.css?a4e5","components/MovieCard/MovieCard.jsx","services/movies-api.jsx","views/HomeView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieCard_list__Sduoj\",\"item\":\"MovieCard_item__c3tx6\",\"title\":\"MovieCard_title__mQEBM\",\"subtitle\":\"MovieCard_subtitle__vyAQT\",\"image\":\"MovieCard_image__ZrmcG\"};","import { Link, useLocation } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport s from './MovieCard.module.css';\n\nconst MovieCard = ({ movies }) => {\n    const location = useLocation();\n    \n    return (\n        <ul className={s.list}>\n            {movies && (\n                movies.map(movie => (\n                <li key={movie.id} className={s.item}>\n                    <Link to={{\n                        pathname: `/movies/${movie.id}`,\n                        state: { from: location },\n                    }} className={s.title}>\n                        <img\n                            className={s.image}\n                            src={movie.poster_path}\n                            alt={movie.title || movie.name}\n                            width=\"300\"\n                            height=\"450\"\n                        />\n                        <p className={s.subtitle}>{movie.title || movie.name}</p>\n                    </Link>\n                </li>\n                ))\n            )}\n        </ul>\n        \n    );\n}\n\nMovieCard.propTypes = {\n  movies: PropTypes.array,\n};\n\nexport default MovieCard;","const API_KEY = '0efd4678447824d950c1f706c4df5ff6';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n    const response = await fetch(url, config);\n    return response.ok\n        ? await response.json()\n        : Promise.reject(new Error('Not found'));\n}\n  \n// Trending Movies\nexport function fetchTrendingMovies() {\n  return fetchWithErrorHandling(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n}\n\n// Movies Search\nexport function fetchMoviesSearch(moviesName) {\n  return fetchWithErrorHandling(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${moviesName}&language=en-US&page=1&include_adult=false`);\n}\n\n// Movie Details\nexport function fetchMovieDetails(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n}\n\n\n// Cast \nexport function fetchMovieCast(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n}\n\n// Rewiews\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n}","import { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from '../services/movies-api';\nimport MovieCard from '../components/MovieCard';\n\nfunction HomeView() {\n    const [movies, setMovies] = useState(null);\n    console.log(movies);\n\n    useEffect(() => {\n        fetchTrendingMovies().then(response => setMovies(response.results));\n    }, []);\n\n    return (\n        <div>\n            <h1>Trending today</h1>\n            <MovieCard movies={movies}/>\n        </div>\n    )\n}\n\nexport default HomeView;"],"names":["movies","location","useLocation","className","s","map","movie","to","pathname","id","state","from","src","poster_path","alt","title","name","width","height","API_KEY","BASE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMoviesSearch","moviesName","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","useState","setMovies","console","log","useEffect","then","results"],"sourceRoot":""}