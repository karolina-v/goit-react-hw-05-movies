{"version":3,"file":"static/js/movie-details-view.33d73cba.chunk.js","mappings":"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","sources":["services/movies-api.jsx","webpack://react-homework-template/./src/components/MovieDetailsPage/MovieDetailsPage.module.css?377f","components/MovieDetailsPage/MovieDetailsPage.jsx","views/MovieDetailsView.js"],"sourcesContent":["const API_KEY = '0efd4678447824d950c1f706c4df5ff6';\nconst BASE_URL = 'https://api.themoviedb.org/3';\nexport const IMAGE_URL = 'https://image.tmdb.org/t/p/w500';\n\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n    const response = await fetch(url, config);\n    return response.ok\n        ? await response.json()\n        : Promise.reject(new Error('Not found'));\n}\n  \n// Trending Movies\nexport function fetchTrendingMovies() {\n  return fetchWithErrorHandling(`${BASE_URL}/trending/all/day?api_key=${API_KEY}`);\n}\n\n// Movies Search\nexport function fetchMoviesSearch(moviesName) {\n  return fetchWithErrorHandling(`${BASE_URL}/search/movie?api_key=${API_KEY}&query=${moviesName}&language=en-US&page=1&include_adult=false`);\n}\n\n// Movie Details\nexport function fetchMovieDetails(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`);\n}\n\n\n// Cast \nexport function fetchMovieCast(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}&language=en-US`);\n}\n\n// Rewiews\nexport function fetchMovieReviews(movieId) {\n  return fetchWithErrorHandling(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US`);\n}","// extracted by mini-css-extract-plugin\nexport default {\"container\":\"MovieDetailsPage_container__VyXai\",\"image\":\"MovieDetailsPage_image__bfvR6\",\"box\":\"MovieDetailsPage_box__U3qWb\",\"title\":\"MovieDetailsPage_title__MDJ+L\",\"rating\":\"MovieDetailsPage_rating__HVE0V\",\"subtitle\":\"MovieDetailsPage_subtitle__2DZVZ\",\"span\":\"MovieDetailsPage_span__6j39O\",\"genres\":\"MovieDetailsPage_genres__HV3uS\",\"link\":\"MovieDetailsPage_link__ZE1Eo\",\"activeLink\":\"MovieDetailsPage_activeLink__ukBb5 MovieDetailsPage_link__ZE1Eo\",\"button\":\"MovieDetailsPage_button__IlAfH\"};","import { NavLink, useRouteMatch, useLocation, useHistory } from 'react-router-dom';\nimport PropTypes from 'prop-types';\nimport { IMAGE_URL } from '../../services/movies-api';\nimport s from './MovieDetailsPage.module.css';\nimport Container from '../Container';\n\n\nfunction MovieDetailsPage({ movie }) {\n    const { url } = useRouteMatch();\n    const history = useHistory();\n    const location = useLocation();\n\n    const onBtnClick = () => {\n        history.push(location?.movie?.from ?? '/'); \n    };\n\n\n    return (\n        <Container>\n            {movie && (\n            <div>\n                <button type='button' className={s.button} onClick={onBtnClick}>Go back</button>\n            \n                \n            <div>\n                <img className={s.image} src={IMAGE_URL + movie.poster_path} alt={movie.title} />\n\n                <div className={s.box}>\n                    <h2 className={s.title}>{movie.title || movie.name}</h2>\n                    <p className={s.rating}>\n                        User Score:\n                        <span className={s.span}> {movie.vote_average} </span>\n                    </p>\n\n                    <p className={s.subtitle}>\n                        Overview:\n                        <span className={s.span}>{movie.overview}</span>\n                    </p>\n\n                    <p className={s.genres}>\n                        Genres:\n                        <span className={s.span}>\n                            {movie.genres.map(genre => genre.name).join(' / ')}\n                        </span>\n                    </p>\n                </div>\n                <hr />\n\n                <h3>Additional information</h3>\n                <nav>\n                    <NavLink\n                        to={`${url}/cast`}\n                        className={s.link}\n                        activeClassName={s.activeLink}\n                    >\n                        Cast\n                    </NavLink>\n\n                    <NavLink\n                        to={`${url}/reviews`}\n                        className={s.link}\n                        activeClassName={s.activeLink}\n                    >\n                        Reviews\n                    </NavLink>\n                        </nav>\n                </div>\n            </div>\n                )}\n        </Container>\n    )\n}\n\nMovieDetailsPage.propTypes = {\n  movie: PropTypes.object.isRequired,\n};\n\n\nexport default MovieDetailsPage;\n","import { useState, useEffect, lazy, Suspense } from 'react';\nimport { Route, Switch, useParams, useRouteMatch } from 'react-router-dom';\nimport { fetchMovieDetails } from '../services/movies-api';\nimport MovieDetailsPage from '../components/MovieDetailsPage';\nimport { Spinner } from '../components/Loader';\n// import MovieCast from './MovieCast';\n// import MovieReviews from './MovieReviews';\n\nconst MovieCast = lazy(() => import('./MovieCast' /* webpackChunkName: \"movie-cast\" */));\nconst MovieReviews = lazy(() => import('./MovieReviews' /* webpackChunkName: \"movie-reviews\" */));\n\n\nfunction MovieDetailsView() {\n    const { movieId } = useParams();\n    const { path } = useRouteMatch();\n    const [movie, setMovie] = useState(null);\n\n    console.log(movieId);\n \n    useEffect(() => {\n        fetchMovieDetails(movieId).then(movie => setMovie(movie));\n    }, [movieId]);\n\n    console.log(movie);\n    \n \n    return (\n        <div>\n            {movie && (\n                <MovieDetailsPage movie={movie} />\n            )}\n            \n\n            <Suspense fallback={<Spinner />}>\n                <Switch>\n                    <Route path={`${path}/cast`}>\n                        <MovieCast movieId={movieId} />\n                    </Route>\n\n                    <Route path={`${path}/reviews`}>\n                        <MovieReviews movieId={movieId} />\n                    </Route>\n                </Switch>\n            </Suspense>\n        </div>\n    )\n}\n\nexport default MovieDetailsView;"],"names":["API_KEY","BASE_URL","IMAGE_URL","fetchWithErrorHandling","url","config","fetch","response","ok","json","Promise","reject","Error","fetchTrendingMovies","fetchMoviesSearch","moviesName","fetchMovieDetails","movieId","fetchMovieCast","fetchMovieReviews","movie","useRouteMatch","history","useHistory","location","useLocation","Container","type","className","s","onClick","push","from","src","poster_path","alt","title","name","vote_average","overview","genres","map","genre","join","to","activeClassName","MovieCast","lazy","MovieReviews","useParams","path","useState","setMovie","console","log","useEffect","then","Suspense","fallback"],"sourceRoot":""}