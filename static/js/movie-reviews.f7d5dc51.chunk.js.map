{"version":3,"file":"static/js/movie-reviews.f7d5dc51.chunk.js","mappings":"2NACA,GAAgB,KAAO,sBAAsB,MAAQ,uBAAuB,KAAO,uB,SC2BnF,MAxBA,YAA+B,IAAZA,EAAW,EAAXA,QACf,OACI,yBACKA,GACG,0BACI,eAAIC,UAAWC,EAAAA,KAAf,SACKF,EAAQG,KAAI,SAACC,EAAMC,GAAP,OACT,gBAAgBJ,UAAWC,EAAAA,KAA3B,WACI,cAAGD,UAAWC,EAAAA,MAAd,SAAwBE,EAAKE,UAC7B,cAAGL,UAAYC,EAAAA,KAAf,SAAwBE,EAAKG,YAFxBF,WAOpB,uECCjB,MAdA,WACE,IAAQG,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAA8BE,EAAAA,EAAAA,UAAS,IAAvC,eAAOV,EAAP,KAAgBW,EAAhB,KAOE,OALAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAkBL,GACbM,MAAK,SAAAC,GAAQ,OAAIJ,EAAWI,EAASf,cAC3C,CAACQ,KAGF,SAAC,EAAD,CAASR,QAASA","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.css?7248","components/Reviews/Reviews.jsx","views/MovieReviews.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"item\":\"Reviews_item__DJKij\",\"title\":\"Reviews_title__t265C\",\"info\":\"Reviews_info__ij-Go\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Reviews.module.css';\n\nfunction Reviews({ reviews }) {\n    return (\n        <div>\n            {reviews ? (\n                <div>\n                    <ul className={s.list}>\n                        {reviews.map((elem, index) => (\n                            <li key={index} className={s.item}>\n                                <p className={s.title}>{elem.author}</p>\n                                <p className={ s.info}>{elem.content}</p>\n                            </li>\n                        ))}\n                    </ul>\n                </div>\n            ) : (<p>We don't have any reviews for this movie</p>)}\n        </div>\n    );\n}\n\nReviews.propTypes = {\n  reviews: PropTypes.array,\n};\n\n\nexport default Reviews;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieReviews } from '../services/movies-api';\nimport Reviews from '../components/Reviews';\n\nfunction ReviewsCast() {\n  const { movieId } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n    useEffect(() => {\n        fetchMovieReviews(movieId)\n            .then(response => setReviews(response.reviews));\n    }, [movieId]);\n\n    return (\n      <Reviews reviews={reviews} />\n  )  \n}\n\nexport default ReviewsCast;"],"names":["reviews","className","s","map","elem","index","author","content","movieId","useParams","useState","setReviews","useEffect","fetchMovieReviews","then","response"],"sourceRoot":""}