{"version":3,"file":"static/js/movie-cast.96de8a13.chunk.js","mappings":"2NACA,EAAuB,mBAAvB,EAAiD,mBAAjD,EAA2E,mB,SC4B3E,MAxBA,YAAyB,IAATA,EAAQ,EAARA,KAEZ,OACI,eAAIC,UAAWC,EAAf,SACKF,EAAKG,KAAI,SAAAC,GAAI,OACV,gBAAkBH,UAAWC,EAA7B,WACI,gBACIG,IAAKC,EAAAA,GAAYF,EAAKG,aACtBC,IAAKJ,EAAKK,KACVC,MAAM,MACNC,OAAO,SAEX,cAAGV,UAAWC,EAAd,SAAuBE,EAAKK,SAPvBL,EAAKQ,UCS9B,MAdA,WACE,IAAQC,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOf,EAAP,KAAagB,EAAb,KAOE,OALAC,EAAAA,EAAAA,YAAU,YACNC,EAAAA,EAAAA,IAAeL,GACVM,MAAK,SAAAC,GAAQ,OAAIJ,EAAQI,EAASpB,WACxC,CAACa,KAGF,SAAC,EAAD,CAAMb,KAAMA","sources":["webpack://react-homework-template/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx","views/MovieCast.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__GlWio\",\"item\":\"Cast_item__a0CDL\",\"name\":\"Cast_name__6UbFm\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { IMAGE_URL } from '../../services/movies-api';\nimport s from './Cast.module.css';\n\nfunction Cast({ cast }) {\n\n    return (\n        <ul className={s.list}>\n            {cast.map(elem => (\n                <li key={elem.id} className={s.item}>\n                    <img\n                        src={IMAGE_URL + elem.profile_path}\n                        alt={elem.name}\n                        width='100'\n                        height='150'\n                    />\n                    <p className={s.name}>{elem.name}</p>\n                </li>\n            ))\n          }\n        </ul>\n    );\n}\n\nCast.propTypes = {\n  cast: PropTypes.array.isRequired,\n};\n\nexport default Cast;","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from '../services/movies-api';\nimport Cast from '../components/Cast';\n\nfunction MovieCast() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n\n    useEffect(() => {\n        fetchMovieCast(movieId)\n            .then(response => setCast(response.cast));\n    }, [movieId]);\n  \n    return (\n      <Cast cast={cast}/>\n  )  \n}\n\nexport default MovieCast;"],"names":["cast","className","s","map","elem","src","IMAGE_URL","profile_path","alt","name","width","height","id","movieId","useParams","useState","setCast","useEffect","fetchMovieCast","then","response"],"sourceRoot":""}